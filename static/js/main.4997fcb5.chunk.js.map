{"version":3,"sources":["assets/NK.svg","libs/errorLib.js","components/ErrorBoundary.js","libs/contextLib.js","components/AuthenticatedRoute.js","components/UnauthenticatedRoute.js","components/LoaderButton.js","libs/hooksLib.js","containers/Login.js","libs/awsLib.js","config.js","containers/Notes.js","containers/Signup.js","containers/NewNote.js","components/BillingForm.js","containers/Settings.js","containers/NotFound.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","logError","error","errorInfo","Sentry","scope","setExtras","onError","message","toString","Error","config","url","alert","ErrorBoundary","state","hasError","this","className","props","children","React","Component","AppContext","createContext","useAppContext","useContext","AuthenticatedRoute","rest","useLocation","pathname","search","isAuthenticated","to","UnauthenticatedRoute","redirect","name","window","location","href","replace","regex","RegExp","results","exec","decodeURIComponent","querystring","LoaderButton","isLoading","disabled","Button","Glyphicon","glyph","useFormFields","initialState","useState","fields","setValues","event","target","id","value","Login","userHasAuthenticated","setIsLoading","email","password","handleFieldChange","a","preventDefault","Auth","signIn","src","Logo","onSubmit","FormGroup","controlId","bsSize","ControlLabel","FormControl","autoFocus","type","onChange","block","length","s3Upload","file","filename","Date","now","Storage","vault","put","contentType","stored","key","process","REACT_APP_STAGE","STRIPE_KEY","s3","REGION","BUCKET","apiGateway","URL","cognito","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","MAX_ATTACHMENT_SIZE","Notes","useRef","useParams","history","useHistory","note","setNote","content","setContent","isDeleting","setIsDeleting","saveNote","API","body","current","size","attachment","push","deleteNote","del","confirm","useEffect","loadNote","get","attachmentURL","onLoad","componentClass","e","Static","rel","files","bsStyle","onClick","Signup","confirmPassword","confirmationCode","newUser","setNewUser","handleSubmit","signUp","username","handleConfirmationSubmit","confirmSignUp","HelpBlock","NewNote","createNote","post","injectStripe","storage","isProcessing","setIsProcessing","isCardComplete","setIsCardComplete","stripe","createToken","token","min","placeholder","complete","style","base","fontSize","fontFamily","Settings","setStripe","billUser","details","source","Stripe","NotFound","Routes","exact","path","App","isAuthenticating","setIsAuthenticating","currentSession","signOut","Navbar","fluid","collapseOnSelect","Header","Brand","Toggle","Collapse","Nav","pullRight","NavItem","Provider","Boolean","hostname","match","dsn","Amplify","configure","mandatorySignIn","region","userPoolId","identityPoolId","userPoolWebClientId","bucket","endpoints","endpoint","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4997fcb5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/NK.0890fdc1.svg\";","import * as Sentry from \"@sentry/browser\";\r\n\r\nconst isLocal = process.env.NODE_ENV === \"development\";\r\n\r\nexport function initSentry() {\r\n  if (isLocal) {\r\n    return;\r\n  }\r\n\r\n  Sentry.init({ dsn: \"https://5f83aa2e21064e47bab8a1f308f940eb@sentry.io/5185720\" });\r\n}\r\n\r\nexport function logError(error, errorInfo = null) {\r\n  if (isLocal) {\r\n    return;\r\n  }\r\n\r\n  Sentry.withScope((scope) => {\r\n    errorInfo && scope.setExtras(errorInfo);\r\n    Sentry.captureException(error);\r\n  });\r\n}\r\n\r\nexport function onError(error) {\r\n  let errorInfo = {};\r\n  let message = error.toString();\r\n\r\n  // Auth errors\r\n  if (!(error instanceof Error) && error.message) {\r\n    errorInfo = error;\r\n    message = error.message;\r\n    error = new Error(message);\r\n    // API errors\r\n  } else if (error.config && error.config.url) {\r\n    errorInfo.url = error.config.url;\r\n  }\r\n\r\n  logError(error, errorInfo);\r\n\r\n  alert(message);\r\n}\r\n","import React from \"react\";\r\nimport { logError } from \"../libs/errorLib\";\r\nimport \"./ErrorBoundary.css\";\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n  state = { hasError: false };\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    logError(error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    return this.state.hasError ? (\r\n      <div className=\"ErrorBoundary\">\r\n        <h3>Sorry there was a problem loading this page</h3>\r\n      </div>\r\n    ) : (\r\n      this.props.children\r\n    );\r\n  }\r\n}\r\n","import { useContext, createContext } from \"react\";\r\n\r\nexport const AppContext = createContext(null);\r\n\r\nexport function useAppContext() {\r\n  return useContext(AppContext);\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect, useLocation } from \"react-router-dom\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\n\r\nexport default function AuthenticatedRoute({ children, ...rest }) {\r\n  const { pathname, search } = useLocation();\r\n  const { isAuthenticated } = useAppContext();\r\n  return (\r\n    <Route {...rest}>\r\n      {isAuthenticated ? (\r\n        children\r\n      ) : (\r\n        <Redirect to={\r\n          `/login?redirect=${pathname}${search}`\r\n        } />\r\n      )}\r\n    </Route>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\n\r\nfunction querystring(name, url = window.location.href) {\r\n  name = name.replace(/[[]]/g, \"\\\\$&\");\r\n\r\n  const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\", \"i\");\r\n  const results = regex.exec(url);\r\n\r\n  if (!results) {\r\n    return null;\r\n  }\r\n  if (!results[2]) {\r\n    return \"\";\r\n  }\r\n\r\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n}\r\n\r\nexport default function UnauthenticatedRoute({ children, ...rest }) {\r\n  const { isAuthenticated } = useAppContext();\r\n  const redirect = querystring(\"redirect\");\r\n  return (\r\n    <Route {...rest}>\r\n      {!isAuthenticated ? (\r\n        children\r\n      ) : (\r\n        <Redirect to={redirect === \"\" || redirect === null ? \"/\" : redirect} />\r\n      )}\r\n    </Route>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, Glyphicon } from \"react-bootstrap\";\r\nimport \"./LoaderButton.css\";\r\n\r\nexport default function LoaderButton({\r\n  isLoading,\r\n  className = \"\",\r\n  disabled = false,\r\n  ...props\r\n}) {\r\n  return (\r\n    <Button\r\n      className={`LoaderButton ${className}`}\r\n      disabled={disabled || isLoading}\r\n      {...props}\r\n    >\r\n      {isLoading && <Glyphicon glyph=\"refresh\" className=\"spinning\" />}\r\n      {props.children}\r\n    </Button>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport function useFormFields(initialState) {\r\n  const [fields, setValues] = useState(initialState);\r\n\r\n  return [\r\n    fields,\r\n    function(event) {\r\n      setValues({\r\n        ...fields,\r\n        [event.target.id]: event.target.value\r\n      });\r\n    }\r\n  ];\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\nimport { useFormFields } from \"../libs/hooksLib\";\r\nimport { onError } from \"../libs/errorLib\";\r\nimport \"./Login.css\";\r\nimport Logo from '../assets/NK.svg'\r\n\r\nexport default function Login() {\r\n  const { userHasAuthenticated } = useAppContext();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [fields, handleFieldChange] = useFormFields({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  function validateForm() {\r\n    return fields.email.length > 0 && fields.password.length > 0;\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await Auth.signIn(fields.email, fields.password);\r\n      userHasAuthenticated(true);\r\n    } catch (e) {\r\n      onError(e);\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      <img src={Logo} className=\"logo\"></img>\r\n      <form onSubmit={handleSubmit}>\r\n        <FormGroup controlId=\"email\" bsSize=\"large\">\r\n          <ControlLabel>Email</ControlLabel>\r\n          <FormControl\r\n            autoFocus\r\n            type=\"email\"\r\n            value={fields.email}\r\n            onChange={handleFieldChange}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup controlId=\"password\" bsSize=\"large\">\r\n          <ControlLabel>Password</ControlLabel>\r\n          <FormControl\r\n            type=\"password\"\r\n            value={fields.password}\r\n            onChange={handleFieldChange}\r\n          />\r\n        </FormGroup>\r\n        <LoaderButton\r\n          block\r\n          type=\"submit\"\r\n          bsSize=\"large\"\r\n          isLoading={isLoading}\r\n          disabled={!validateForm()}\r\n        >\r\n          Login\r\n        </LoaderButton>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { Storage } from \"aws-amplify\";\r\n\r\nexport async function s3Upload(file) {\r\n  const filename = `${Date.now()}-${file.name}`;\r\n\r\n  const stored = await Storage.vault.put(filename, file, {\r\n    contentType: file.type,\r\n  });\r\n\r\n  return stored.key;\r\n}\r\n","const dev = {\r\n  STRIPE_KEY: \"pk_test_v1amvR35uoCNduJfkqGB8RLD\",\r\n  s3: {\r\n    REGION: \"us-east-1\",\r\n    BUCKET: \"notes-app-2-api-dev-attachmentsbucket-qvdowkch2uj1\"\r\n  },\r\n  apiGateway: {\r\n    REGION: \"us-east-1\",\r\n    URL: \"https://api.serverless-stack.seed-demo.club/dev\"\r\n  },\r\n  cognito: {\r\n    REGION: \"us-east-1\",\r\n    USER_POOL_ID: \"us-east-1_f8l0OHPtp\",\r\n    APP_CLIENT_ID: \"5r5o292r1n7s2vgje5u5c7vpq0\",\r\n    IDENTITY_POOL_ID: \"us-east-1:b718098b-fe72-410b-b4c6-0750f9135672\"\r\n  }\r\n};\r\n\r\nconst prod = {\r\n  STRIPE_KEY: \"pk_test_v1amvR35uoCNduJfkqGB8RLD\",\r\n  s3: {\r\n    REGION: \"us-east-1\",\r\n    BUCKET: \"notes-app-2-api-prod-attachmentsbucket-1v9w7kkxnznb7\"\r\n  },\r\n  apiGateway: {\r\n    REGION: \"us-east-1\",\r\n    URL: \"https://api.serverless-stack.seed-demo.club/prod\"\r\n  },\r\n  cognito: {\r\n    REGION: \"us-east-1\",\r\n    USER_POOL_ID: \"us-east-1_mLbfKylhm\",\r\n    APP_CLIENT_ID: \"mli2vaupiq3ga29m4698m6mrl\",\r\n    IDENTITY_POOL_ID: \"us-east-1:4e377eff-0617-4098-b218-673490ffab8d\"\r\n  }\r\n};\r\n\r\n// Default to dev if not set\r\nconst config = process.env.REACT_APP_STAGE === 'prod'\r\n  ? prod\r\n  : dev;\r\n\r\nexport default {\r\n  // Add common config values here\r\n  MAX_ATTACHMENT_SIZE: 5000000,\r\n  ...config\r\n};\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { onError } from \"../libs/errorLib\";\r\nimport { s3Upload } from \"../libs/awsLib\";\r\nimport config from \"../config\";\r\nimport \"./Notes.css\";\r\n\r\nexport default function Notes() {\r\n  const file = useRef(null);\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const [note, setNote] = useState(null);\r\n  const [content, setContent] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    function loadNote() {\r\n      return API.get(\"notes\", `/notes/${id}`);\r\n    }\r\n\r\n    async function onLoad() {\r\n      try {\r\n        const note = await loadNote();\r\n        const { content, attachment } = note;\r\n\r\n        if (attachment) {\r\n          note.attachmentURL = await Storage.vault.get(attachment);\r\n        }\r\n\r\n        setContent(content);\r\n        setNote(note);\r\n      } catch (e) {\r\n        onError(e);\r\n      }\r\n    }\r\n\r\n    onLoad();\r\n  }, [id]);\r\n\r\n  function validateForm() {\r\n    return content.length > 0;\r\n  }\r\n\r\n  function formatFilename(str) {\r\n    return str.replace(/^\\w+-/, \"\");\r\n  }\r\n\r\n  function handleFileChange(event) {\r\n    file.current = event.target.files[0];\r\n  }\r\n\r\n  function saveNote(note) {\r\n    return API.put(\"notes\", `/notes/${id}`, {\r\n      body: note\r\n    });\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    let attachment;\r\n\r\n    event.preventDefault();\r\n\r\n    if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\r\n      alert(\r\n        `Please pick a file smaller than ${\r\n          config.MAX_ATTACHMENT_SIZE / 1000000\r\n        } MB.`\r\n      );\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      if (file.current) {\r\n        attachment = await s3Upload(file.current);\r\n      }\r\n\r\n      await saveNote({\r\n        content,\r\n        attachment: attachment || note.attachment\r\n      });\r\n      history.push(\"/\");\r\n    } catch (e) {\r\n      onError(e);\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  function deleteNote() {\r\n    return API.del(\"notes\", `/notes/${id}`);\r\n  }\r\n\r\n  async function handleDelete(event) {\r\n    event.preventDefault();\r\n\r\n    const confirmed = window.confirm(\r\n      \"Are you sure you want to delete this note?\"\r\n    );\r\n\r\n    if (!confirmed) {\r\n      return;\r\n    }\r\n\r\n    setIsDeleting(true);\r\n\r\n    try {\r\n      await deleteNote();\r\n      history.push(\"/\");\r\n    } catch (e) {\r\n      onError(e);\r\n      setIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Notes\">\r\n      {note && (\r\n        <form onSubmit={handleSubmit}>\r\n          <FormGroup controlId=\"content\">\r\n            <FormControl\r\n              value={content}\r\n              componentClass=\"textarea\"\r\n              onChange={e => setContent(e.target.value)}\r\n            />\r\n          </FormGroup>\r\n          {note.attachment && (\r\n            <FormGroup>\r\n              <ControlLabel>Attachment</ControlLabel>\r\n              <FormControl.Static>\r\n                <a\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  href={note.attachmentURL}\r\n                >\r\n                  {formatFilename(note.attachment)}\r\n                </a>\r\n              </FormControl.Static>\r\n            </FormGroup>\r\n          )}\r\n          <FormGroup controlId=\"file\">\r\n            {!note.attachment && <ControlLabel>Attachment</ControlLabel>}\r\n            <FormControl onChange={handleFileChange} type=\"file\" />\r\n          </FormGroup>\r\n          <LoaderButton\r\n            block\r\n            type=\"submit\"\r\n            bsSize=\"large\"\r\n            bsStyle=\"primary\"\r\n            isLoading={isLoading}\r\n            disabled={!validateForm()}\r\n          >\r\n            Save\r\n          </LoaderButton>\r\n          <LoaderButton\r\n            block\r\n            bsSize=\"large\"\r\n            bsStyle=\"danger\"\r\n            onClick={handleDelete}\r\n            isLoading={isDeleting}\r\n          >\r\n            Delete\r\n          </LoaderButton>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  HelpBlock,\r\n  FormGroup,\r\n  FormControl,\r\n  ControlLabel\r\n} from \"react-bootstrap\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\nimport { useFormFields } from \"../libs/hooksLib\";\r\nimport { onError } from \"../libs/errorLib\";\r\nimport \"./Signup.css\";\r\n\r\nexport default function Signup() {\r\n  const [fields, handleFieldChange] = useFormFields({\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    confirmationCode: \"\",\r\n  });\r\n  const history = useHistory();\r\n  const [newUser, setNewUser] = useState(null);\r\n  const { userHasAuthenticated } = useAppContext();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  function validateForm() {\r\n    return (\r\n      fields.email.length > 0 &&\r\n      fields.password.length > 0 &&\r\n      fields.password === fields.confirmPassword\r\n    );\r\n  }\r\n\r\n  function validateConfirmationForm() {\r\n    return fields.confirmationCode.length > 0;\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const newUser = await Auth.signUp({\r\n        username: fields.email,\r\n        password: fields.password,\r\n      });\r\n      setIsLoading(false);\r\n      setNewUser(newUser);\r\n    } catch (e) {\r\n      onError(e);\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  async function handleConfirmationSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await Auth.confirmSignUp(fields.email, fields.confirmationCode);\r\n      await Auth.signIn(fields.email, fields.password);\r\n\r\n      userHasAuthenticated(true);\r\n      history.push(\"/\");\r\n    } catch (e) {\r\n      onError(e);\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  function renderConfirmationForm() {\r\n    return (\r\n      <form onSubmit={handleConfirmationSubmit}>\r\n        <FormGroup controlId=\"confirmationCode\" bsSize=\"large\">\r\n          <ControlLabel>Confirmation Code</ControlLabel>\r\n          <FormControl\r\n            autoFocus\r\n            type=\"tel\"\r\n            onChange={handleFieldChange}\r\n            value={fields.confirmationCode}\r\n          />\r\n          <HelpBlock>Please check your email for the code.</HelpBlock>\r\n        </FormGroup>\r\n        <LoaderButton\r\n          block\r\n          type=\"submit\"\r\n          bsSize=\"large\"\r\n          isLoading={isLoading}\r\n          disabled={!validateConfirmationForm()}\r\n        >\r\n          Verify\r\n        </LoaderButton>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  function renderForm() {\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <FormGroup controlId=\"email\" bsSize=\"large\">\r\n          <ControlLabel>Email</ControlLabel>\r\n          <FormControl\r\n            autoFocus\r\n            type=\"email\"\r\n            value={fields.email}\r\n            onChange={handleFieldChange}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup controlId=\"password\" bsSize=\"large\">\r\n          <ControlLabel>Password</ControlLabel>\r\n          <FormControl\r\n            type=\"password\"\r\n            value={fields.password}\r\n            onChange={handleFieldChange}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup controlId=\"confirmPassword\" bsSize=\"large\">\r\n          <ControlLabel>Confirm Password</ControlLabel>\r\n          <FormControl\r\n            type=\"password\"\r\n            onChange={handleFieldChange}\r\n            value={fields.confirmPassword}\r\n          />\r\n        </FormGroup>\r\n        <LoaderButton\r\n          block\r\n          type=\"submit\"\r\n          bsSize=\"large\"\r\n          isLoading={isLoading}\r\n          disabled={!validateForm()}\r\n        >\r\n          Signup\r\n        </LoaderButton>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"Signup\">\r\n      {newUser === null ? renderForm() : renderConfirmationForm()}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { API } from \"aws-amplify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { onError } from \"../libs/errorLib\";\r\nimport { s3Upload } from \"../libs/awsLib\";\r\nimport config from \"../config\";\r\nimport \"./NewNote.css\";\r\n\r\nexport default function NewNote() {\r\n  const file = useRef(null);\r\n  const history = useHistory();\r\n  const [content, setContent] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  function validateForm() {\r\n    return content.length > 0;\r\n  }\r\n\r\n  function handleFileChange(event) {\r\n    file.current = event.target.files[0];\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\r\n      alert(\r\n        `Please pick a file smaller than ${\r\n          config.MAX_ATTACHMENT_SIZE / 1000000\r\n        } MB.`\r\n      );\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const attachment = file.current ? await s3Upload(file.current) : null;\r\n\r\n      await createNote({ content, attachment });\r\n      history.push(\"/\");\r\n    } catch (e) {\r\n      onError(e);\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  function createNote(note) {\r\n    return API.post(\"notes\", \"/notes\", {\r\n      body: note\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"NewNote\">\r\n      <form onSubmit={handleSubmit}>\r\n        <FormGroup controlId=\"content\">\r\n          <FormControl\r\n            value={content}\r\n            componentClass=\"textarea\"\r\n            onChange={e => setContent(e.target.value)}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup controlId=\"file\">\r\n          <ControlLabel>Attachment</ControlLabel>\r\n          <FormControl onChange={handleFileChange} type=\"file\" />\r\n        </FormGroup>\r\n        <LoaderButton\r\n          block\r\n          type=\"submit\"\r\n          bsSize=\"large\"\r\n          bsStyle=\"primary\"\r\n          isLoading={isLoading}\r\n          disabled={!validateForm()}\r\n        >\r\n          Create\r\n        </LoaderButton>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport { CardElement, injectStripe } from \"react-stripe-elements\";\r\nimport LoaderButton from \"./LoaderButton\";\r\nimport { useFormFields } from \"../libs/hooksLib\";\r\nimport \"./BillingForm.css\";\r\n\r\nfunction BillingForm({ isLoading, onSubmit, ...props }) {\r\n  const [fields, handleFieldChange] = useFormFields({\r\n    name: \"\",\r\n    storage: \"\"\r\n  });\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [isCardComplete, setIsCardComplete] = useState(false);\r\n\r\n  isLoading = isProcessing || isLoading;\r\n\r\n  function validateForm() {\r\n    return (\r\n      fields.name !== \"\" &&\r\n      fields.storage !== \"\" &&\r\n      isCardComplete\r\n    );\r\n  }\r\n\r\n  async function handleSubmitClick(event) {\r\n    event.preventDefault();\r\n\r\n    setIsProcessing(true);\r\n\r\n    const { token, error } = await props.stripe.createToken({ name: fields.name });\r\n\r\n    setIsProcessing(false);\r\n\r\n    onSubmit(fields.storage, { token, error });\r\n  }\r\n\r\n  return (\r\n    <form className=\"BillingForm\" onSubmit={handleSubmitClick}>\r\n      <FormGroup bsSize=\"large\" controlId=\"storage\">\r\n        <ControlLabel>Storage</ControlLabel>\r\n        <FormControl\r\n          min=\"0\"\r\n          type=\"number\"\r\n          value={fields.storage}\r\n          onChange={handleFieldChange}\r\n          placeholder=\"Number of notes to store\"\r\n        />\r\n      </FormGroup>\r\n      <hr />\r\n      <FormGroup bsSize=\"large\" controlId=\"name\">\r\n        <ControlLabel>Cardholder&apos;s name</ControlLabel>\r\n        <FormControl\r\n          type=\"text\"\r\n          value={fields.name}\r\n          onChange={handleFieldChange}\r\n          placeholder=\"Name on the card\"\r\n        />\r\n      </FormGroup>\r\n      <ControlLabel>Credit Card Info</ControlLabel>\r\n      <CardElement\r\n        className=\"card-field\"\r\n        onChange={e => setIsCardComplete(e.complete)}\r\n        style={{\r\n          base: { fontSize: \"18px\", fontFamily: '\"Open Sans\", sans-serif' }\r\n        }}\r\n      />\r\n      <LoaderButton\r\n        block\r\n        type=\"submit\"\r\n        bsSize=\"large\"\r\n        isLoading={isLoading}\r\n        disabled={!validateForm()}\r\n      >\r\n        Purchase\r\n      </LoaderButton>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default injectStripe(BillingForm);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { API } from \"aws-amplify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Elements, StripeProvider } from \"react-stripe-elements\";\r\nimport BillingForm from \"../components/BillingForm\";\r\nimport { onError } from \"../libs/errorLib\";\r\nimport config from \"../config\";\r\nimport \"./Settings.css\";\r\n\r\nexport default function Settings() {\r\n  const history = useHistory();\r\n  const [stripe, setStripe] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setStripe(window.Stripe(config.STRIPE_KEY));\r\n  }, []);\r\n\r\n  function billUser(details) {\r\n    return API.post(\"notes\", \"/billing\", {\r\n      body: details\r\n    });\r\n  }\r\n\r\n  async function handleFormSubmit(storage, { token, error }) {\r\n    if (error) {\r\n      onError(error);\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await billUser({\r\n        storage,\r\n        source: token.id\r\n      });\r\n\r\n      alert(\"Your card has been charged successfully!\");\r\n      history.push(\"/\");\r\n    } catch (e) {\r\n      onError(e);\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Settings\">\r\n      <StripeProvider stripe={stripe}>\r\n        <Elements>\r\n          <BillingForm isLoading={isLoading} onSubmit={handleFormSubmit} />\r\n        </Elements>\r\n      </StripeProvider>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./NotFound.css\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div className=\"NotFound\">\r\n      <h3>Sorry, page not found!</h3>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport AuthenticatedRoute from \"./components/AuthenticatedRoute\";\r\nimport UnauthenticatedRoute from \"./components/UnauthenticatedRoute\";\r\n\r\nimport Home from \"./containers/Home\";\r\nimport Login from \"./containers/Login\";\r\nimport Notes from \"./containers/Notes\";\r\nimport Signup from \"./containers/Signup\";\r\nimport NewNote from \"./containers/NewNote\";\r\nimport Settings from \"./containers/Settings\";\r\nimport NotFound from \"./containers/NotFound\";\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <Login />\r\n      </Route>\r\n      <UnauthenticatedRoute exact path=\"/login\">\r\n        <Login />\r\n      </UnauthenticatedRoute>\r\n      <UnauthenticatedRoute exact path=\"/signup\">\r\n        <Signup />\r\n      </UnauthenticatedRoute>\r\n      <AuthenticatedRoute exact path=\"/settings\">\r\n        <Settings />\r\n      </AuthenticatedRoute>\r\n      <AuthenticatedRoute exact path=\"/notes/new\">\r\n        <NewNote />\r\n      </AuthenticatedRoute>\r\n      <AuthenticatedRoute exact path=\"/notes/:id\">\r\n        <Notes />\r\n      </AuthenticatedRoute>\r\n      {/* Finally, catch all unmatched routes */}\r\n      <Route>\r\n        <NotFound />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport ErrorBoundary from \"./components/ErrorBoundary\";\r\nimport { AppContext } from \"./libs/contextLib\";\r\nimport { onError } from \"./libs/errorLib\";\r\nimport Routes from \"./Routes\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const history = useHistory();\r\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\r\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    onLoad();\r\n  }, []);\r\n\r\n  async function onLoad() {\r\n    try {\r\n      await Auth.currentSession();\r\n      userHasAuthenticated(true);\r\n    }\r\n    catch(e) {\r\n      if (e !== 'No current user') {\r\n        onError(e);\r\n      }\r\n    }\r\n\r\n    setIsAuthenticating(false);\r\n  }\r\n\r\n  async function handleLogout() {\r\n    await Auth.signOut();\r\n\r\n    userHasAuthenticated(false);\r\n\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  return (\r\n    !isAuthenticating && (\r\n      <div className=\"App container\">\r\n        <Navbar fluid collapseOnSelect>\r\n          <Navbar.Header>\r\n            <Navbar.Brand>\r\n              <Link to=\"/\">Workspace</Link>\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle />\r\n          </Navbar.Header>\r\n          <Navbar.Collapse>\r\n            <Nav pullRight>\r\n              {isAuthenticated ? (\r\n                <>\r\n                  <LinkContainer to=\"/settings\">\r\n                    <NavItem>Settings</NavItem>\r\n                  </LinkContainer>\r\n                  <NavItem onClick={handleLogout}>Logout</NavItem>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <LinkContainer to=\"/signup\">\r\n                    <NavItem>Signup</NavItem>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/login\">\r\n                    <NavItem>Login</NavItem>\r\n                  </LinkContainer>\r\n                </>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        <ErrorBoundary>\r\n          <AppContext.Provider value={{ isAuthenticated, userHasAuthenticated }}>\r\n            <Routes />\r\n          </AppContext.Provider>\r\n        </ErrorBoundary>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Amplify } from 'aws-amplify';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport config from './config';\r\nimport { initSentry } from './libs/errorLib';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\ninitSentry();\r\n\r\nAmplify.configure({\r\n  Auth: {\r\n    mandatorySignIn: true,\r\n    region: config.cognito.REGION,\r\n    userPoolId: config.cognito.USER_POOL_ID,\r\n    identityPoolId: config.cognito.IDENTITY_POOL_ID,\r\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID\r\n  },\r\n  Storage: {\r\n    region: config.s3.REGION,\r\n    bucket: config.s3.BUCKET,\r\n    identityPoolId: config.cognito.IDENTITY_POOL_ID\r\n  },\r\n  API: {\r\n    endpoints: [\r\n      {\r\n        name: \"notes\",\r\n        endpoint: config.apiGateway.URL,\r\n        region: config.apiGateway.REGION\r\n      },\r\n    ]\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}